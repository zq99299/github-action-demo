# 可选项 - 工作流程的名称，它将显示在 GitHub 仓库的 "Actions" 标签页中。如果省略此字段，则将使用工作流程文件的名称
name: 示例工作流程
# 可选项 - 工作流程生成的工作流程运行的名称，它将显示在仓库的 "Actions" 标签页的工作流程运行列表中。
# 此示例使用了一个带有 GitHub 上下文的表达式，用于显示触发工作流程运行的操作者的用户名。
# 有关更多信息，请参阅"GitHub Actions 工作流程语法 https://docs.github.com/zh/actions/using-workflows/workflow-syntax-for-github-actions#run-name"
run-name: ${{ github.actor }} 是一个示例工作流程
# 指定此工作流程的触发器。此示例使用了推送事件（push event），因此每当有人向仓库推送更改或合并拉取请求时，都会触发工作流程运行。这将由对每个分支的推送触发；如果只在特定分支、路径或标签上进行推送的语法示例，请参考文档
on: [push]
# 定义工作流程中执行的任务（Job 作业)
# 将在 "learn-github-actions" 工作流程中运行的所有作业分组在一起
jobs:
  # 定义一个名为 "check-bats-version" 的作业。子键将定义作业的属性
  # 作业名称：检查 bats 框架的版本号
  check-bats-version:
    # 配置作业在最新版本的 Ubuntu Linux runner 上运行。
    # 这意味着该作业将在由 GitHub 托管的全新虚拟机上执行。有关使用其他运行器的语法示例，请参考文档
    runs-on: ubuntu-latest
    # 定义步骤
    # 将在 "check-bats-version" 作业中运行的所有步骤分组在一起。此部分下的每个嵌套项都是一个单独的动作或 shell 脚本
    steps:
      # 使用 actions/checkout 动作从 GitHub 仓库拉取代码
      # 使用关键字指定此步骤将运行 actions/checkout 动作的 v4 版本。这是一个将仓库检出到 runner 上的动作，允许您对代码运行脚本或其他动作（例如构建和测试工具）。每当工作流程需要使用仓库的代码时，应该使用 checkout 动作
      - uses: actions/checkout@v4
      # 使用  actions/setup-node 动作安装 Node.js 环境
      # 此步骤使用 actions/setup-node@v3 动作来安装指定版本的 Node.js（此示例使用版本 14）。这将将 node 和 npm 命令添加到您的 PATH 环境变量中
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      #  运行命令安装 bats 框架
      # run 关键字告诉作业在 runner 上执行一个命令。在这种情况下，您正在使用 npm 安装 bats 软件测试包
      - run: npm install -g bats
      # 查看版本号
      - run: bats --version